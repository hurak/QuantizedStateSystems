var documenterSearchIndex = {"docs":
[{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/#First-order-system-without-an-input","page":"Examples","title":"First-order system without an input","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"[TBD]","category":"page"},{"location":"examples/#First-order-system-with-an-input","page":"Examples","title":"First-order system with an input","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Consider a first-order system given by the state equation dot x = -x + u, where x is a state variable and u is the provided (control) input, which comes in the form of a delayed (and scaled) Heaviside step 10u(t-1.76). The initial value x(t₀)=10.0 is given at the initial time t₀=0. Evolution of x(t) over all times t in the interval [t₀,t₁], where t₁=5 is requested.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The model is given by the right-hand side of the state equation and the initial state","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"f = (x,u) -> -1.0*x + u\nx₀ = 10.0  ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The simulation interval is","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"tspan = (0.0,5.0)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The QSS method assumes thet the (control) input is assumed a piecewise constant function of time, which is perfectly satisfied for the Heaviside step function. In general it is pretty reasonable assumption for systes controlled through computers with zero order holds. We enter such inputs as a pair of two vectors – a vector of times when the input changes in a stepwise manner, and a vector of values to which the input changes at the respective times. In particular, the delayd (with the delay of 1.76 s) and scaled (with the factor of 10.0) Heaviside step function is characterized as","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"tuarray = [1.76]\nuarray = [10.0]","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The only parameter for the method is the quantum Δq. We choose","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Δq = 2.0","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This is rather rough for practical purposes for the given initial state (of fifth of the initial state) but we will use it to visualize the principle of the method.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Now it is time to call the solver","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(txarray,xarray,tqarray,qarray) = qss1(f,x₀,tspan,Δq,tuarray,uarray)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Before we plot the solution, we may appreciate that in the linear case we can get the exact solution using a formular, which makes it possible to see how accurate the QSS1 method is.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"heaviside(t,τ) = t>=τ ? 1.0 : 0.0\nx(t) = x₀*exp(-t) + 10.0*(heaviside(t,1.76)*(1.0-exp(-t+1.76)))\nt = range(tspan[1],tspan[2],length=500)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"We can now plot the solution. We will plot not only the state x trajectory for the QSS1 method and the \"exact\" trajectory obtained from the convolution formula, but we will also plot the quantized state q. We will also show the (control) input u.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using Plots\np1 = plot(t,x.(t),linewidth=3, label=\"Analytical solution\")\nplot!(txarray,xarray, linewidth=3, marker=:dot, label=\"QSS1 solution\")\nplot!(tqarray,qarray, linewidth=3, seriestype = :steppost, label=\"QSS1 quantized solution\")\np2 = plot(t,10.0.*heaviside.(t,1.76),linewidth=3,seriestype=:steppost,label=\"Control\")\nplot(p1,p2,layout=(2,1))","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: Simulation outcomes)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"note: Note\nApparently the last output is computed well before the end of the timespan. Will be fixed.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = QuantizedStateSystems","category":"page"},{"location":"#QuantizedStateSystems.jl","page":"Home","title":"QuantizedStateSystems.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for QuantizedStateSystems.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#References","page":"Home","title":"References","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"E. Kofman and S. Junco, \"Quantized-state systems: a DEVS Approach for continuous system simulation\", Trans. Soc. Comput. Simul. Int., vol. 18, no. 3, pp. 123–132, Sep. 2001.\nF. E. Cellier and E. Kofman, Continuous System Simulation, Springer, 2010.\nB. P. Zeigler, A. Muzy, and E. Kofman, Theory of Modeling and Simulation: Discrete Event and Iterative System Computational Foundations, 3rd ed. Academic Press, 2018.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [QuantizedStateSystems]","category":"page"},{"location":"#QuantizedStateSystems.qss1-NTuple{4, Any}","page":"Home","title":"QuantizedStateSystems.qss1","text":"txarray,xarray,tqarray,qarray = qss1(f,x₀,tspan,Δq)\n\nSolve the initial value problem (IVP) for a given first-order ODE using the method of hysteretically quantized state system (QSS) or order 1.\n\nConsider a single first-order explicit ODEs (aka state equation) ẋ = f(x), with the initial value x₀ specified at an initial time t₀. Solution is to be found on a time span tspan=(t₀,t₁). The only parameter for the method is the quantum Δq. The hysteresis band has the same width as the quantum.\n\nThe outputs are four arrays:\n\na 1D array (aka vector) t of times when the value of x is given,\na vector of values of x corresponding to the times,\n1D array x of the 1D arrays corresponding to the evolution of the state variable,\n1D array q of the 1D arrays corresponding to the evolution of the quantized state variable.\n\nNote that for a first-order system with no external events the x and q arrays are identical up to the initial values (x₀ before and after quantization), but we decided to keep track of both separately just in case we extend the functionality for handling external events (such as step inputs).\n\nExample\n\njulia> f(x) = -1.0*x;\njulia> x₀ = 10.0;\njulia> tspan = (0.0,1.0);\njulia> Δq = 0.1;\njulia> tarray,xarray,qarray = qss1(f,x₀,tspan,Δq);\n\n\n\n\n\n","category":"method"},{"location":"#QuantizedStateSystems.qss1-NTuple{6, Any}","page":"Home","title":"QuantizedStateSystems.qss1","text":"txarray,xarray,tqarray,qarray = qss1(f,x₀,tspan,Δq,tuarray,uarray)\n\nSolve the initial value problem (IVP) for a given first-order ODE with inputs using the method of hysteretically quantized state system (QSS) or order 1.\n\nConsider a single first-order explicit ODEs (aka state equation) ẋ = f(x,u), with the initial value x₀ specified at an initial time t₀ and a piecewise (control) input u given by a pair of vectors tuarray and uarrayof times and values. Solution is to be found on a time span tspan=(t₀,t₁). The only parameter for the method is the quantum Δq. The hysteresis band has the same width as the quantum.\n\nThe outputs are four arrays:\n\na 1D array (aka vector) t of times when the value of x is given,\na vector of values of x corresponding to the times,\n1D array x of the 1D arrays corresponding to the evolution of the state variable,\n1D array q of the 1D arrays corresponding to the evolution of the quantized state variable.\n\nNote that for a first-order system with no external events the x and q arrays are identical up to the initial values (x₀ before and after quantization), but we decided to keep track of both separately just in case we extend the functionality for handling external events (such as step inputs).\n\n\n\n\n\n","category":"method"}]
}
