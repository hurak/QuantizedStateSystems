var documenterSearchIndex = {"docs":
[{"location":"references/#References","page":"References","title":"References","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"E. Kofman and S. Junco, \"Quantized-state systems: a DEVS Approach for continuous system simulation\", Trans. Soc. Comput. Simul. Int., vol. 18, no. 3, pp. 123–132, Sep. 2001.\nF. E. Cellier and E. Kofman, Continuous System Simulation, Springer, 2010.\nB. P. Zeigler, A. Muzy, and E. Kofman, Theory of Modeling and Simulation: Discrete Event and Iterative System Computational Foundations, 3rd ed. Academic Press, 2018.","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/#First-order-system-without-an-input","page":"Examples","title":"First-order system without an input","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Find a solution on the time interval 02 for the first-order system given by the equation","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"dot x(t) = fracx(t)-2tx^2(t)1+t","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"with the initial condition x(0) = 5.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"We enter the model, that is, the function on the right-hand side of the state equation and the initial state in Julia as simply as","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"f = (x,u,t) -> (x-2t*x^2)/(1+t)\nx₀ = 5.0","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The time interval is entered as a tuple of the initial and final time","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"tspan = (0.0,2.0)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The only parameter for the method is the quantum Δq. We intentionally set rather large value to see its impact in the simulation outcome","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Δq = 1.0","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Let's call the solver","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(txarray,xarray,tqarray,qarray) = qss1(f,x₀,tspan,Δq,tuarray,uarray)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Before we plot the solution, we take the advantage of availability of a formula for the exact solution:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"x(t) = fract+1t^2+1x(0)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"We plot our (approximating) numerical solution x and its quantized counterpart q  together with the exact solution.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using Plots\nx(t) = (t+1)/(t^2+1/x₀)\nt = range(tspan[1],tspan[2],length=500)\nplot(t,x.(t),linewidth=3, xlabel=\"Time\", ylabel=\"State\", label=\"Analytical\", legend=:topright)\nplot!(tqarray,qarray, linewidth=3, seriestype = :steppost, label=\"QSS1 quantized\")\nplot!(txarray,xarray, linewidth=3, marker=:dot, label=\"QSS1\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: Simulation outcomes)","category":"page"},{"location":"examples/#First-order-system-with-an-input","page":"Examples","title":"First-order system with an input","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Consider a first-order system given by the state equation dot x = -x + u, where x is a state variable and u is the provided (control) input, which comes in the form of a delayed (and scaled) Heaviside step 10u(t-1.76). The initial value x(t₀)=10.0 is given at the initial time t₀=0. Evolution of x(t) over all times t in the interval [t₀,t₁], where t₁=5 is requested.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The model is given by the right-hand side of the state equation and the initial state","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"f = (x,u) -> -1.0*x + u\nx₀ = 10.0  ","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The simulation interval is","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"tspan = (0.0,5.0)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The QSS method assumes thet the (control) input is assumed a piecewise constant function of time, which is perfectly satisfied for the Heaviside step function. In general it is pretty reasonable assumption for systes controlled through computers with zero order holds. We enter such inputs as a pair of two vectors – a vector of times when the input changes in a stepwise manner, and a vector of values to which the input changes at the respective times. In particular, the delayd (with the delay of 1.76 s) and scaled (with the factor of 10.0) Heaviside step function is characterized as","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"tuarray = [1.76]\nuarray = [10.0]","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The only parameter for the method is the quantum Δq. We intentionally set rather large value to see its impact in the simulation outcome","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Δq = 2.0","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This is rather rough for practical purposes for the given initial state (of fifth of the initial state) but we will use it to visualize the principle of the method.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Now it is time to call the solver","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(txarray,xarray,tqarray,qarray) = qss1(f,x₀,tspan,Δq,tuarray,uarray)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Before we plot the solution, we may appreciate that in the linear case we can get the exact solution using a formula. This will make it possible to see how accurate the QSS1 method is.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"heaviside(t,τ) = t>=τ ? 1.0 : 0.0\nx(t) = x₀*exp(-t) + 10.0*(heaviside(t,1.76)*(1.0-exp(-t+1.76)))\nt = range(tspan[1],tspan[2],length=500)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"We can now plot the solution. We plot not only the state x trajectory for the QSS1 method and the \"exact\" trajectory obtained from the convolution formula, but we also plot the quantized state q. In a separate subplot we also show the (control) input u.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using Plots\np1 = plot(t,x.(t),linewidth=3, label=\"Analytical solution\")\nplot!(txarray,xarray, linewidth=3, marker=:dot, label=\"QSS1 solution\")\nplot!(tqarray,qarray, linewidth=3, seriestype = :steppost, label=\"QSS1 quantized solution\")\np2 = plot(t,10.0.*heaviside.(t,1.76),linewidth=3,seriestype=:steppost,label=\"Control\")\nplot(p1,p2,layout=(2,1))","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: Simulation outcomes)","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = QuantizedStateSystems","category":"page"},{"location":"#QuantizedStateSystems.jl","page":"Home","title":"QuantizedStateSystems.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for QuantizedStateSystems.jl Julia package for solving initial value problems (IVP) defined by ordinary differential equations (ODE).","category":"page"},{"location":"#Functions","page":"Home","title":"Functions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [QuantizedStateSystems]","category":"page"},{"location":"#QuantizedStateSystems.qss1-NTuple{6, Any}","page":"Home","title":"QuantizedStateSystems.qss1","text":"txarray,xarray,tqarray,qarray = qss1(f,x₀,tspan,Δq,tuarray,uarray)\n\nSolve the initial value problem (IVP) for a given first-order ODE with inputs using the method of hysteretically quantized state system (QSS) or order 1.\n\nFor a single first-order explicit ODEs (aka state equation) ẋ = f(x,u), with the initial value x₀ specified at an initial time t₀, and possibly a piecewise (control) input u given by a pair of vectors tuarray and uarrayof times and values, find the solution on the time span tspan=(t₀,t₁). The only parameter for the method is the quantum Δq, while the hysteresis band has the same width as the quantum.\n\nArguments\n\nf: function defining the right hand side of the differential equation.\nx₀: initial condition.\ntspan: time span.\nΔq: quantum.\ntuarray: array of times at which the the input changes to a new constant value.\nuarray: array of values of the piecewise constant input.\n\nOutputs\n\ntxarray: a vector of times when the value of x is computed, between these values it evolves linearly.\nxarray: a vector of values of x corresponding to the times.\ntqarray: a vector of times when the value of piecewise constant q changes.\nqarray: a vector of values of the piecewise constant quantized q.\n\nNote that for a first-order system with no external events the x and q arrays are identical up to the initial values (x₀ before vs. after quantization).\n\n\n\n\n\n","category":"method"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
